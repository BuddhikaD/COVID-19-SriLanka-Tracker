{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","covidData","fetch","then","Response","json","users","console","log","setState","data","className","this","rel","href","integrity","crossorigin","class","update_date_time","local_total_cases","local_deaths","local_new_cases","local_recovered","type","bg","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+QAgJeA,E,kDA3Ib,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,UAAW,MAJD,E,gEAQO,IAAD,OAClBC,MAAM,yDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACZR,UAAWK,EAAMI,Y,+BAMvB,OACE,yBAAKC,UAAU,OACY,MAAxBC,KAAKZ,MAAMC,WACV,6BACE,0BACEY,IAAI,aACJC,KAAK,uFAEP,0BACED,IAAI,aACJC,KAAK,2EACLC,UAAU,0EACVC,YAAY,cAEd,0BACEF,KAAK,kEACLD,IAAI,eAEN,yBAAKI,MAAM,gCACT,wBACEA,MAAM,gDACNH,KAAK,KAFP,6BAMA,0BAAMG,MAAM,4BACV,uBAAGH,KAAK,gCACN,4BACE,0BAAMG,MAAM,qBAKpB,6BACA,6BACA,gLACA,wBAAIA,MAAM,cAAV,oBACA,2BACE,4BAAKL,KAAKZ,MAAMC,UAAUiB,mBAE5B,6BACA,6BACA,6BACA,yBAAKD,MAAM,mBACT,yBAAKA,MAAM,aACT,yBAAKA,MAAM,kCACT,yBAAKA,MAAM,aACT,4BACE,0BAAMA,MAAM,qBAEd,wBAAIA,MAAM,cAAV,kHACA,wBAAIA,MAAM,cACR,wBAAIA,MAAM,qBACPL,KAAKZ,MAAMC,UAAUkB,sBAK9B,yBAAKF,MAAM,qCACT,yBAAKA,MAAM,aACT,4BACE,0BAAMA,MAAM,iBAEd,wBAAIA,MAAM,cAAV,uEACA,wBAAIA,MAAM,aACR,wBAAIA,MAAM,qBACPL,KAAKZ,MAAMC,UAAUmB,iBAK9B,yBAAKH,MAAM,gCACT,yBAAKA,MAAM,aACT,4BACE,0BAAMA,MAAM,sBAEd,wBAAIA,MAAM,cAAV,yFAEA,wBAAIA,MAAM,aACR,wBAAIA,MAAM,qBACPL,KAAKZ,MAAMC,UAAUoB,oBAK9B,yBAAKJ,MAAM,mCACT,yBAAKA,MAAM,aACT,4BACE,0BAAMA,MAAM,gBAEd,wBAAIA,MAAM,cAAV,sGACA,wBAAIA,MAAM,aACR,wBAAIA,MAAM,qBACPL,KAAKZ,MAAMC,UAAUqB,qBAMhC,yJAIA,6BACA,6BACA,0GAMF,kBAAC,IAAD,CAAaC,KAAK,SAASC,IAAI,U,GApIzBC,IAAMC,WCQJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.b687d5dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport ParticlesBg from \"particles-bg\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      covidData: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://hpb.health.gov.lk/api/get-current-statistical\")\r\n      .then((Response) => Response.json())\r\n      .then((users) => {\r\n        console.log(users);\r\n        this.setState({\r\n          covidData: users.data,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.covidData != null && (\r\n          <div>\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n            ></link>\r\n            <link\r\n              rel=\"stylesheet\"\r\n              href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\r\n              integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\r\n              crossorigin=\"anonymous\"\r\n            ></link>\r\n            <link\r\n              href=\"https://fonts.googleapis.com/css?family=Baloo+Da+2&display=swap\"\r\n              rel=\"stylesheet\"\r\n            ></link>\r\n            <nav class=\"navbar navbar-light bg-light\">\r\n              <h1\r\n                class=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n                href=\"#\"\r\n              >\r\n                COVID-19 SriLanka Tracker\r\n              </h1>\r\n              <form class=\"form-inline my-2 my-lg-0\">\r\n                <a href=\"https://github.com/BuddhikaD\">\r\n                  <h1>\r\n                    <span class=\"fa fa-github\"></span>\r\n                  </h1>\r\n                </a>\r\n              </form>\r\n            </nav>\r\n            <br />\r\n            <br />\r\n            <h1>COVID-19 ශ්‍රී ලංකා තත්ත්ව වාර්තාව</h1>\r\n            <h5 class=\"text-muted\">Last Update Time</h5>\r\n            <b>\r\n              <h4>{this.state.covidData.update_date_time}</h4>\r\n            </b>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div class=\"container pt-3 \">\r\n              <div class=\"card-deck\">\r\n                <div class=\"card text-white bg-danger mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <h1>\r\n                      <span class=\"fa fa-ambulance\"></span>\r\n                    </h1>\r\n                    <h1 class=\"card-title\">මුළු රෝගීන් සංඛ්‍යාව</h1>\r\n                    <h1 class=\"card-text \">\r\n                      <h1 class=\"badge badge-light\">\r\n                        {this.state.covidData.local_total_cases}\r\n                      </h1>\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card text-white bg-secondary mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <h1>\r\n                      <span class=\"fa fa-hotel\"></span>\r\n                    </h1>\r\n                    <h1 class=\"card-title\">මරණ සංඛ්‍යාව</h1>\r\n                    <h1 class=\"card-text\">\r\n                      <h1 class=\"badge badge-light\">\r\n                        {this.state.covidData.local_deaths}\r\n                      </h1>\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card text-white bg-dark mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <h1>\r\n                      <span class=\"fa fa-wheelchair\"></span>\r\n                    </h1>\r\n                    <h2 class=\"card-title\">නවතම වාර්තාවීම්</h2>\r\n\r\n                    <h1 class=\"card-text\">\r\n                      <h1 class=\"badge badge-light\">\r\n                        {this.state.covidData.local_new_cases}\r\n                      </h1>\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card text-white bg-success mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <h1>\r\n                      <span class=\"fa fa-male\"></span>\r\n                    </h1>\r\n                    <h1 class=\"card-title\">සුවය ලැබූ සංඛ්‍යාව</h1>\r\n                    <h1 class=\"card-text\">\r\n                      <h1 class=\"badge badge-light\">\r\n                        {this.state.covidData.local_recovered}\r\n                      </h1>\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <p>\r\n                This might take several minutes to be updated,since Health\r\n                Promotion Bureau is issuing verified data from reliable sources\r\n              </p>\r\n              <br />\r\n              <br />\r\n              <footer>\r\n                Made with ❤ by Buddhika Dananjaya | Powered by hpb.health.gov.lk\r\n              </footer>\r\n            </div>\r\n\r\n            {}\r\n            <ParticlesBg type=\"cobweb\" bg={true} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}